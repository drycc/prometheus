{{- if eq .Values.global.prometheusLocation "on-cluster" }}
{{- $platformDomain := .Values.global.platformDomain }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: drycc-prometheus
  labels:
    heritage: drycc
  annotations:
    component.drycc.cc/version: {{ .Values.imageTag }}
spec:
  serviceName: drycc-prometheus-headless
  replicas: {{ index .Values "prometheusServer" "replicas" }}
  selector:
    matchLabels:
      app: drycc-prometheus
  template:
    metadata:
      labels: {{- include "common.labels.standard" . | nindent 8 }}
        app: drycc-prometheus
    spec:
      serviceAccount: drycc-prometheus
      affinity:
        podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.prometheusServer.podAffinityPreset.type "component" "" "extraMatchLabels" .Values.prometheusServer.podAffinityPreset.extraMatchLabels "topologyKey" "" "context" $) | nindent 10 }}
        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.prometheusServer.podAntiAffinityPreset.type "component" "" "extraMatchLabels" .Values.prometheusServer.podAntiAffinityPreset.extraMatchLabels "topologyKey" "" "context" $) | nindent 10 }}
        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" ( index .Values "prometheusServer" "nodeAffinityPreset" "type") "key" ( index .Values "prometheusServer" "nodeAffinityPreset" "key") "values" ( index .Values "prometheusServer" "nodeAffinityPreset" "values" ) ) | nindent 10 }}
      containers:
      - name: drycc-prometheus
        image: {{ .Values.imageRegistry }}/{{ .Values.imageOrg }}/prometheus:{{ .Values.imageTag }}
        imagePullPolicy: {{.Values.imagePullPolicy}}
        args:
          - prometheus
          - --web.route-prefix=/
          - --storage.tsdb.retention.time={{ index .Values "prometheusServer" "retention" }}
          - --config.file=/opt/drycc/prometheus/config/prometheus.yaml
          - --storage.tsdb.path=/data
          - --web.console.libraries=/opt/drycc/console_libraries
          - --web.console.templates=/opt/drycc/prometheus/consoles
          {{- range (index .Values "prometheusServer" "extraFlags" ) }}
          - --{{ . }}
          {{- end }}
          {{- range $key, $value := (index .Values "prometheusServer" "extraArgs" ) }}
          - --{{ $key }}={{ $value }}
          {{- end }}
          {{- if .Values.global.certManagerEnabled }}
          - --web.external-url=https://drycc-prometheus.{{ $platformDomain }}
          {{- else }}
          - --web.external-url=http://drycc-prometheus.{{ $platformDomain }}
          {{- end }}
        livenessProbe:
          failureThreshold: 10
          httpGet:
            path: /-/healthy
            port: web
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 3
        ports:
        - containerPort: 9090
          name: web
          protocol: TCP
        readinessProbe:
          failureThreshold: 10
          httpGet:
            path: /-/ready
            port: web
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 3
        resources: {}
        startupProbe:
          failureThreshold: 60
          httpGet:
            path: /-/ready
            port: web
            scheme: HTTP
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 3
  {{- if not (index .Values "prometheusServer" "persistence" "enabled") }}
        - name: prometheus-data
          emptyDir: {}
  {{- else }}
  volumeClaimTemplates:
  - metadata:
      name: prometheus-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      {{- if (index .Values "prometheusServer" "persistence" "storageClass") }}
      {{- if (eq "-" (index .Values "prometheusServer" "persistence" "storageClass")) }}
      storageClassName: ""
      {{- else }}
      storageClassName: "{{ (index .Values "prometheusServer" "persistence" "storageClass") }}"
      {{- end }}
      {{- end }}
      resources:
        requests:
          storage: {{ (index .Values "prometheusServer" "persistence" "size") | quote }}
  {{- end }}
{{- end }}
